# Generated by Django 3.0.7 on 2020-09-20 16:06

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import web_penerimaan.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.PositiveIntegerField(choices=[(1, 'student'), (2, 'comitte'), (3, 'admin')], default=1)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_student', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('nisn', models.CharField(max_length=50, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('nama', models.CharField(max_length=50)),
                ('alamat', models.TextField()),
                ('sekolah', models.CharField(max_length=100)),
                ('nama_ayah', models.CharField(blank=True, max_length=50, null=True)),
                ('nama_ibu', models.CharField(blank=True, max_length=50, null=True)),
                ('alamat_orang_tua', models.TextField(blank=True, null=True)),
                ('Penghasilan_ayah', models.PositiveIntegerField(choices=[(1, '< Rp.2.000.000'), (2, 'Rp.2.000.000 - Rp.5.000.000'), (3, 'Rp.5.000.000 - Rp.10.000.000'), (4, '> Rp.10.000.000')], default=1)),
                ('Penghasilan_ibu', models.PositiveIntegerField(choices=[(1, '< Rp.2.000.000'), (2, 'Rp.2.000.000 - Rp.5.000.000'), (3, 'Rp.5.000.000 - Rp.10.000.000'), (4, '> Rp.10.000.000')], default=1)),
                ('foto', models.FileField(blank=True, null=True, upload_to=web_penerimaan.models._upload_path, validators=[django.core.validators.FileExtensionValidator(['pdf']), web_penerimaan.models.file_size])),
                ('ijazah', models.FileField(blank=True, null=True, upload_to=web_penerimaan.models._upload_path, validators=[django.core.validators.FileExtensionValidator(['pdf']), web_penerimaan.models.file_size])),
                ('SKHUN', models.FileField(blank=True, null=True, upload_to=web_penerimaan.models._upload_path, validators=[django.core.validators.FileExtensionValidator(['pdf']), web_penerimaan.models.file_size])),
                ('status_pendaftaran', models.PositiveIntegerField(choices=[(1, 'Belum'), (2, 'Selesai')], default=1)),
                ('status_verifikasi', models.PositiveIntegerField(choices=[(1, 'Belum'), (2, 'Sudah')], default=1)),
                ('status_seleksi', models.PositiveIntegerField(choices=[(1, 'Belum'), (2, 'Tidak Lulus'), (3, 'Lulus')], default=1)),
            ],
        ),
    ]
